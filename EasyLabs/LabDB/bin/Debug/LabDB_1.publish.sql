/*
Deployment script for LabDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "LabDB"
:setvar DefaultFilePrefix "LabDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column client_id on table [dbo].[Appointment] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column test_id on table [dbo].[Appointment] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Appointment])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column user_id on table [dbo].[Client] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Client])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column test_id on table [dbo].[Components] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column unit_id on table [dbo].[Components] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Components])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column user_id on table [dbo].[Employee] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Employee])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column appointment_id on table [dbo].[Test_results] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column component_id on table [dbo].[Test_results] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Test_results])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping Foreign Key unnamed constraint on [dbo].[Appointment]...';


GO
ALTER TABLE [dbo].[Appointment] DROP CONSTRAINT [FK__Appointme__clien__35BCFE0A];


GO
PRINT N'Dropping Foreign Key unnamed constraint on [dbo].[Appointment]...';


GO
ALTER TABLE [dbo].[Appointment] DROP CONSTRAINT [FK__Appointme__test___36B12243];


GO
PRINT N'Dropping Foreign Key unnamed constraint on [dbo].[Client]...';


GO
ALTER TABLE [dbo].[Client] DROP CONSTRAINT [FK__Client__user_id__2E1BDC42];


GO
PRINT N'Dropping Foreign Key unnamed constraint on [dbo].[Components]...';


GO
ALTER TABLE [dbo].[Components] DROP CONSTRAINT [FK__Component__test___3B75D760];


GO
PRINT N'Dropping Foreign Key unnamed constraint on [dbo].[Components]...';


GO
ALTER TABLE [dbo].[Components] DROP CONSTRAINT [FK__Component__unit___3C69FB99];


GO
PRINT N'Dropping Foreign Key unnamed constraint on [dbo].[Employee]...';


GO
ALTER TABLE [dbo].[Employee] DROP CONSTRAINT [FK__Employee__user_i__30F848ED];


GO
PRINT N'Dropping Foreign Key unnamed constraint on [dbo].[Test_results]...';


GO
ALTER TABLE [dbo].[Test_results] DROP CONSTRAINT [FK__Test_resu__appoi__3F466844];


GO
PRINT N'Dropping Foreign Key unnamed constraint on [dbo].[Test_results]...';


GO
ALTER TABLE [dbo].[Test_results] DROP CONSTRAINT [FK__Test_resu__compo__403A8C7D];


GO
PRINT N'Altering Table [dbo].[Appointment]...';


GO
ALTER TABLE [dbo].[Appointment] ALTER COLUMN [client_id] INT NOT NULL;

ALTER TABLE [dbo].[Appointment] ALTER COLUMN [test_id] INT NOT NULL;


GO
PRINT N'Altering Table [dbo].[Client]...';


GO
ALTER TABLE [dbo].[Client] ALTER COLUMN [user_id] INT NOT NULL;


GO
PRINT N'Altering Table [dbo].[Components]...';


GO
ALTER TABLE [dbo].[Components] ALTER COLUMN [test_id] INT NOT NULL;

ALTER TABLE [dbo].[Components] ALTER COLUMN [unit_id] INT NOT NULL;


GO
PRINT N'Altering Table [dbo].[Employee]...';


GO
ALTER TABLE [dbo].[Employee] ALTER COLUMN [user_id] INT NOT NULL;


GO
PRINT N'Altering Table [dbo].[Test_results]...';


GO
ALTER TABLE [dbo].[Test_results] ALTER COLUMN [appointment_id] INT NOT NULL;

ALTER TABLE [dbo].[Test_results] ALTER COLUMN [component_id] INT NOT NULL;


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Appointment]...';


GO
ALTER TABLE [dbo].[Appointment] WITH NOCHECK
    ADD FOREIGN KEY ([client_id]) REFERENCES [dbo].[Client] ([client_id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Appointment]...';


GO
ALTER TABLE [dbo].[Appointment] WITH NOCHECK
    ADD FOREIGN KEY ([test_id]) REFERENCES [dbo].[Test] ([test_id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Client]...';


GO
ALTER TABLE [dbo].[Client] WITH NOCHECK
    ADD FOREIGN KEY ([user_id]) REFERENCES [dbo].[User] ([user_id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Components]...';


GO
ALTER TABLE [dbo].[Components] WITH NOCHECK
    ADD FOREIGN KEY ([test_id]) REFERENCES [dbo].[Test] ([test_id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Components]...';


GO
ALTER TABLE [dbo].[Components] WITH NOCHECK
    ADD FOREIGN KEY ([unit_id]) REFERENCES [dbo].[Units] ([unit_id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Employee]...';


GO
ALTER TABLE [dbo].[Employee] WITH NOCHECK
    ADD FOREIGN KEY ([user_id]) REFERENCES [dbo].[User] ([user_id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Test_results]...';


GO
ALTER TABLE [dbo].[Test_results] WITH NOCHECK
    ADD FOREIGN KEY ([appointment_id]) REFERENCES [dbo].[Appointment] ([appointment_id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Test_results]...';


GO
ALTER TABLE [dbo].[Test_results] WITH NOCHECK
    ADD FOREIGN KEY ([component_id]) REFERENCES [dbo].[Components] ([component_id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Appointment'), OBJECT_ID(N'dbo.Client'), OBJECT_ID(N'dbo.Components'), OBJECT_ID(N'dbo.Employee'), OBJECT_ID(N'dbo.Test_results'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
